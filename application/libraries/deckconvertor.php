<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of deckconvertor
 *
 * @author Korri
 */
class DeckConvertor {
    const FORMAT_MWS = 'MWS';
    const FORMAT_APPRENTICE = 'Apprentice';
    const FORMAT_UNKNOWN = 'Unknown';
    public function convert($file) {
        $format = $this->detect_format($file);
        $return = '//File generated by BA Deck Convertor from '.$format.' format'."\n";
        
        $in_sideboard = false;
        
        $lines = file($file);
        foreach($lines as $line) {
            //Clean spaces and endline
            $line = trim($line);
            
            if($format == self::FORMAT_MWS) {
                //Remove Set name
                $line = preg_replace('/ ?\[.{2,3}\] ?/', ' ', $line);

                //Handle sideboard
                if(substr($line, 0, 3) == 'SB:') {
                    $line = preg_replace('/^SB: ?/', '', $line);
                    if(!$in_sideboard) {
                        $in_sideboard = true;
                        $return .= '#SIDEBOARD'."\n";
                    }
                }
            }
            if($format == self::FORMAT_APPRENTICE) {
                if($line === 'Sideboard') {
                    $line = '#SIDEBOARD';
                    $in_sideboard = true;
                }
            }
            $return .= $line."\n";
        }
        
        return $return;
    }
    public function detect_format($file) {
        //First let's try to find extention
        $pathinfo = pathinfo($file);
        switch ($pathinfo['extension']) {
            case 'mwDeck':
                return self::FORMAT_MWS;
            case 'txt':
                $content = file_get_contents($file);
                //TODO: Find a safer way
                if(preg_match('/^Sideboard/m', $content)) {
                    return self::FORMAT_APPRENTICE;
                }
            default:
                return self::FORMAT_UNKNOWN;
        }
    }
}

?>
